make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jun  9 16:39:19 2022

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = ubuntu
# default
.SHELLFLAGS := -c
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
IM_CONFIG_PHASE = 2
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /run/user/1000/gdm/Xauthority
# environment
GDMSESSION = ubuntu
# environment
XMODIFIERS = @im=ibus
# makefile
CURDIR := /home/sakshi-ubuntu/Documents/knn_gpu
# makefile
SHELL = /bin/sh
# makefile (from 'Makefile', line 36)
NVCC_INCLUDE = 
# environment
SNAP_DATA = /var/snap/code/97
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /snap/code/97/usr/share/code/code
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-ubuntu:/etc/xdg
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from 'Makefile', line 25)
NVCC = $(CUDA_BIN_PATH)/nvcc
# automatic
@F = $(notdir $@)
# environment
GIO_LAUNCHED_DESKTOP_FILE = /var/lib/snapd/desktop/applications/code_code.desktop
# environment
USERNAME = sakshi-ubuntu
# environment
XDG_DATA_DIRS = /usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
CLUTTER_IM_MODULE = xim
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/sakshi-ubuntu
# makefile (from 'Makefile', line 54)
GPP = g++
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/97/usr/share/glib-2.0/schemas
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/sakshi-ubuntu/.local/bin:/usr/local/cuda-11.7/bin:/home/sakshi-ubuntu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
# makefile (from 'Makefile', line 22)
CUDA_BIN_PATH = $(CUDA_PATH)/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
SESSION_MANAGER = local/sakshi-ubuntu:@/tmp/.ICE-unix/1695,unix/sakshi-ubuntu:/tmp/.ICE-unix/1695
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GDK_PIXBUF_MODULE_FILE = /home/sakshi-ubuntu/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
TEXTDOMAIN = im-config
# environment
SNAP = /snap/code/97
# environment
SNAP_VERSION = c3511e6c
# environment
XDG_MENU_PREFIX = gnome-
# environment
VSCODE_LOG_STACK = false
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/97/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = ubuntu
# environment
SSH_AUTH_SOCK = /run/user/1000/keyring/ssh
# environment
GIO_LAUNCHED_DESKTOP_FILE_PID = 2222
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'Makefile', line 8)
SRCDIR = src
# makefile (from 'Makefile', line 49)
CUDA_LINK_FLAGS = -dlink -Wno-deprecated-gpu-targets
# environment
GTK_IM_MODULE = ibus
# environment
VSCODE_PIPE_LOGGING = true
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/sakshi-ubuntu/Documents/knn_gpu
# makefile (from 'Makefile', line 15)
CPP_FILES = main.cpp KNN.cpp MovieLensParser.cpp
# makefile (from 'Makefile', line 23)
CUDA_LIB_PATH = $(CUDA_PATH)/lib64
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1790
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = ubuntu:GNOME
# environment
GTK_MODULES = gail:atk-bridge
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/sakshi-ubuntu
# environment
LD_LIBRARY_PATH = /usr/local/cuda-11.7/lib64
# makefile (from 'Makefile', line 14)
CUDA_FILES = KNN_GPU.cu
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/sakshi-ubuntu/.config/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = sakshi-ubuntu
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = HXb0CHHp6_ETWgYzjXOIlO8ZyjDI6GgWJldJ6ycLiE47Wa93ipCw
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# makefile (from 'Makefile', line 68)
CPP_OBJ = $(addprefix $(OBJDIR)/, $(addsuffix .o, $(CPP_FILES)))
# environment
SNAP_USER_COMMON = /home/sakshi-ubuntu/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# default
MAKE_VERSION := 4.1
# environment
GNOME_DESKTOP_SESSION_ID = this-is-deprecated
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XDG_VTNR = 2
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/sakshi-ubuntu
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
QT_IM_MODULE = ibus
# environment
SNAP_USER_DATA = /home/sakshi-ubuntu/snap/code/97
# environment
SHLVL = 1
# environment
GNOME_SHELL_SESSION_MODE = ubuntu
# environment
VSCODE_IPC_HOOK_EXTHOST = /run/user/1000/vscode-ipc-5620ebf2-d78b-4a54-a17b-51d4a95e94da.sock
# environment
XDG_SESSION_ID = 2
# environment
USER = sakshi-ubuntu
# environment
SNAP_REVISION = 97
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile', line 56)
INCLUDE = -I$(CUDA_INC_PATH)
# environment
XDG_CURRENT_DESKTOP = Unity
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-9acbfc2c-1.67.2-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# makefile (from 'Makefile', line 38)
NVCC_GENCODES = -gencode arch=compute_50,code=sm_50 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_61,code=compute_61
# automatic
+F = $(notdir $+)
# environment
QT_ACCESSIBILITY = 1
# makefile (from 'Makefile', line 65)
CUDA_OBJ_FILES = $(addprefix $(OBJDIR)/, $(addsuffix .o, $(CUDA_FILES)))
# environment
TEXTDOMAINDIR = /usr/share/locale/
# default
MAKEFILES := 
# environment
SNAP_COOKIE = HXb0CHHp6_ETWgYzjXOIlO8ZyjDI6GgWJldJ6ycLiE47Wa93ipCw
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 7)
OBJDIR = obj
# environment
SNAP_NAME = code
# environment
LC_ALL = C
# environment
QT4_IM_MODULE = xim
# environment
GJS_DEBUG_TOPICS = JS ERROR;JS LOG
# makefile (from 'Makefile', line 57)
LIBS = -L$(CUDA_LIB_PATH) -lcudart -lcufft -lsndfile
# automatic
^F = $(notdir $^)
# makefile (from 'Makefile', line 20)
CUDA_PATH = /usr/local/cuda-11.7
# default
SUFFIXES := 
# makefile (from 'Makefile', line 55)
FLAGS = -g -Wall -D_REENTRANT -std=c++0x -pthread
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# makefile (from 'Makefile', line 34)
NVCC_FLAGS := -m64 -g -dc -Wno-deprecated-gpu-targets --std=c++11 --expt-relaxed-constexpr
# environment
WINDOWPATH = 2
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
GJS_DEBUG_OUTPUT = stderr
# makefile (from 'Makefile', line 64)
CUDA_OBJ = $(OBJDIR)/cuda.o
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 37)
NVCC_LIBS = 
# environment
LANG = C
# environment
VSCODE_PID = 2279
# makefile (from 'Makefile', line 21)
CUDA_INC_PATH = $(CUDA_PATH)/include
 
# variable set hash-table stats:
# Load=145/1024=14%, Rehash=0, Collisions=32/213=15%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2051, inode 3119076): 10 files, no impossibilities.

# 10 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
src/KNN.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/cuda.o: obj/KNN_GPU.cu.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 96):
	$(NVCC) $(CUDA_LINK_FLAGS) $(NVCC_GENCODES) -o $@ $(NVCC_INCLUDE) $^

knn-cpu: obj/main.cpp.o obj/KNN.cpp.o obj/MovieLensParser.cpp.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 82):
	$(GPP) $(FLAGS) -o knn-cpu $^

obj/MovieLensParser.cpp.o: src/MovieLensParser.cpp
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'MovieLensParser.cpp'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 86):
	$(GPP) $(FLAGS) -c -o $@ $(INCLUDE) $<

all: knn
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/8=0%

knn: obj/main.cpp.o obj/KNN.cpp.o obj/MovieLensParser.cpp.o obj/cuda.o obj/KNN_GPU.cu.o
#  Implicit rule search has not been done.
#  Last modified 2022-06-09 16:27:32.720321408
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/8=0%
#  recipe to execute (from 'Makefile', line 79):
	$(GPP) $(FLAGS) -o knn $(INCLUDE) $^ $(LIBS)

cuda: obj/KNN_GPU.cu.o obj/cuda.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-09 13:54:19.791755
#  File has been updated.
#  Successfully updated.

# Not a target:
src/KNN_GPU.cu:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

obj/KNN.cpp.o: src/KNN.cpp
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'KNN.cpp'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 86):
	$(GPP) $(FLAGS) -c -o $@ $(INCLUDE) $<

obj/KNN_GPU.cu.o: src/KNN_GPU.cu
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'KNN_GPU'
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 90):
	$(NVCC) $(NVCC_FLAGS) $(NVCC_GENCODES) -c -o $@ $(NVCC_INCLUDE) $<

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 99):
	rm -f knn knn-cpu obj/*.o
	# $(GPP) $(FLAGS) -c src/KNN.cpp -o $(OBJDIR)/KNN.o
	# $(GPP) $(FLAGS) -c src/MovieLensParser.cpp -o $(OBJDIR)/MovieLensParser.o
	# $(GPP) $(FLAGS) -c src/main.cpp -o $(OBJDIR)/main.o

# Not a target:
src/main.cpp:
#  Implicit rule search has been done.
#  Last modified 2022-06-09 16:36:04.679720765
#  File has been updated.
#  Successfully updated.

obj/main.cpp.o: src/main.cpp
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'main.cpp'
#  Last modified 2022-06-09 16:27:26.968556768
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := obj/main.cpp.o
# automatic
# % := 
# automatic
# * := main.cpp
# automatic
# + := src/main.cpp
# automatic
# | := 
# automatic
# < := src/main.cpp
# automatic
# ^ := src/main.cpp
# automatic
# ? := src/main.cpp
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=3/18=17%
#  recipe to execute (from 'Makefile', line 86):
	$(GPP) $(FLAGS) -c -o $@ $(INCLUDE) $<

# Not a target:
src/MovieLensParser.cpp:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=17/1024=2%, Rehash=0, Collisions=4/50=8%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 35 / storage = 369 B / avg = 10 B
# current buf: size = 8162 B / used = 369 B / count = 35 / avg = 10 B

# strcache performance: lookups = 63 / hit rate = 44%
# hash-table stats:
# Load=35/8192=0%, Rehash=0, Collisions=1/63=2%
# Finished Make data base on Thu Jun  9 16:39:19 2022

 
